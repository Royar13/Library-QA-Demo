{"version":3,"sources":["app.js","addReader/addReader.js","displayReaders/displayReaders.js","filters/dateToISO.js","login/login.js","main/main.js","panel/panel.js","services/user.js","topBar/topBar.js","directives/error/error.js","directives/field/errors.js","directives/field/generalErrors.js","directives/field/selectField.js","directives/field/textField.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.js","sourcesContent":["var app = angular.module(\"library\", [\"ngRoute\", \"ngAlertify\", \"smart-table\"]);\r\napp.config(function ($routeProvider) {\r\n    $routeProvider\r\n            .when(\"/\", {\r\n                templateUrl: \"app/login/login.html\",\r\n                controller: \"loginCtrl\"\r\n            })\r\n            .when(\"/main\", {\r\n                templateUrl: \"app/main/main.html\",\r\n                controller: \"mainCtrl\"\r\n            })\r\n            .when(\"/displayReaders\", {\r\n                templateUrl: \"app/displayReaders/displayReaders.html\",\r\n                controller: \"displayReadersCtrl\"\r\n            })\r\n            .when(\"/addReader\", {\r\n                templateUrl: \"app/addReader/addReader.html\",\r\n                controller: \"addReaderCtrl\"\r\n            });\r\n}).run(function ($rootScope, $location) {\r\n    $rootScope.$on(\"$routeChangeSuccess\", function (event, data) {\r\n        if (data.$$route && data.$$route.controller)\r\n            $rootScope.controllerName = data.$$route.controller;\r\n    });\r\n});","angular.module(\"library\").controller(\"addReaderCtrl\", function ($scope, $http, alertify) {\r\n    $scope.fields = {\r\n        id: \"\",\r\n        name: \"\",\r\n        city: \"\",\r\n        street: \"\",\r\n        maxBooks: 0,\r\n        readerType: \"\"\r\n    };\r\n    $scope.errors = {};\r\n    $scope.select = {};\r\n    $scope.monthlyPay = 0;\r\n    $scope.$watchGroup([\"fields.readerType\", \"fields.maxBooks\"], function (newValues, oldValues, scope) {\r\n        try {\r\n            scope.monthlyPay = getReaderType(newValues[0]).bookCost * newValues[1];\r\n        }\r\n        catch (ex) {\r\n\r\n        }\r\n    });\r\n\r\n    function getReaderType(id) {\r\n        for (var i in $scope.select.readerTypes) {\r\n            if ($scope.select.readerTypes[i].id == id)\r\n                return $scope.select.readerTypes[i];\r\n        }\r\n    }\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/getReaderTypes.php\"\r\n    }).then(function (response) {\r\n        $scope.select.readerTypes = response.data.readerTypes;\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/getBooksNum.php\"\r\n    }).then(function (response) {\r\n        $scope.select.maxBooks = response.data.booksNum;\r\n    });\r\n    $scope.addReader = function () {\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/addReader.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (!response.data.success) {\r\n                $scope.errors = response.data.errors;\r\n                alertify.error(\"הקלט שהוזן אינו תקין\");\r\n            }\r\n            else {\r\n                alertify.success(\"הקורא נוסף בהצלחה!\");\r\n            }\r\n        });\r\n    };\r\n});\r\n","angular.module(\"library\").controller(\"displayReadersCtrl\", function ($scope, $http) {\n    $scope.readers = [];\n    $http({\n        method: \"post\",\n        url: \"./server/readReaders.php\"\n    }).then(function (response) {\n        $scope.readers = response.data.readers;\n    });\n});","angular.module(\"library\").filter('dateToISO', function () {\n    return function (input) {\n        return new Date(input).toISOString();\n    };\n});","angular.module(\"library\").controller(\"loginCtrl\", function ($scope, $http, userService, $location) {\r\n    var request = userService.getUser();\r\n    if (request === true) {\r\n        $location.path(\"/main\");\r\n    } else {\r\n        request.then(function () {\r\n            if (userService.user != null)\r\n                $location.path(\"/main\");\r\n        });\r\n    }\r\n    $scope.fields = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n    $scope.errors = {};\r\n    $scope.login = function () {\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/login.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (response.data.success) {\r\n                userService.updateUser(response.data.username, response.data.name);\r\n                $location.path(\"/main\");\r\n            } else {\r\n                $scope.errors = response.data.errors;\r\n            }\r\n        });\r\n    };\r\n});","angular.module(\"library\").controller(\"mainCtrl\", function ($scope) {\r\n});","angular.module(\"library\").controller(\"panelCtrl\", function ($scope, $window, $location, alertify) {\r\n    alertify.logPosition(\"top right\");\r\n\r\n    var bgRatio = 1.67;\r\n    var bgWidth = $(window).height() * bgRatio;\r\n    var leftMargin = ($(window).width() - bgWidth) / 2;\r\n    $scope.panelStyle = {};\r\n    $scope.panelStyle.right = Math.max(leftMargin + 20, 20);\r\n    //$scope.panelStyle.width = bgWidth * 0.7;\r\n    //$scope.panelStyle.height = $(window).height() * 0.8;\r\n\r\n    $scope.back = function () {\r\n        $window.history.back();\r\n    };\r\n\r\n    $scope.includeTopBar = function () {\r\n        return $location.path() != \"/\";\r\n    }\r\n    $scope.loading = false;\r\n});","angular.module(\"library\").service(\"userService\", function ($http, $location) {\r\n    this.updateUser = function (username, name) {\r\n        this.user = {username: username, name: name};\r\n    };\r\n    this.getUser = function () {\r\n        if (this.user != null) {\r\n            return true;\r\n        }\r\n        var _this = this;\r\n        return $http({\r\n            method: \"post\",\r\n            url: \"./server/login.php\"\r\n        }).then(function (response) {\r\n            if (response.data.success) {\r\n                _this.updateUser(response.data.username, response.data.name);\r\n            }\r\n        });\r\n    };\r\n});","angular.module(\"library\").controller(\"topBarCtrl\", function ($scope, $http, $location, userService) {\r\n    $scope.user = {};\r\n    function retrieveUser() {\r\n        Object.keys(userService.user).forEach(function (key) {\r\n            $scope.user[key] = userService.user[key];\r\n        });\r\n    }\r\n    ;\r\n    var request = userService.getUser();\r\n    if (request === true) {\r\n        retrieveUser();\r\n    } else {\r\n        request.then(function () {\r\n            if (userService.user != null)\r\n                retrieveUser();\r\n            else\r\n                $location.path(\"/\");\r\n        });\r\n    }\r\n    $scope.disconnect = function () {\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/disconnect.php\"\r\n        }).then(function () {\r\n            userService.user = null;\r\n            $location.path(\"/\");\r\n        });\r\n    };\r\n});","angular.module(\"library\").directive(\"error\", function () {\n    return {\n    };\n});","angular.module(\"library\").directive(\"errors\", function () {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: \"app/directives/field/errors.html\"\n    };\n});","angular.module(\"library\").directive(\"generalErrors\", function () {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: \"app/directives/field/generalErrors.html\"\n    };\n});","angular.module(\"library\").directive(\"selectField\", function () {\n    return {\n        restrict: \"A\",\n        scope: true,\n        require: \"field\",\n        templateUrl: \"app/directives/field/selectField.html\",\n        controller: function ($scope, $element) {\n            $scope.field = $element.attr(\"field-name\");\n\n            $scope.class = \"\";\n            if ($element[0].hasAttribute(\"add-class\")) {\n                $scope.class = $element.attr(\"add-class\");\n            }\n            $scope.selectName = $element.attr(\"options\");\n            var valueName = null;\n            if ($element[0].hasAttribute(\"options-value\")) {\n                valueName = $element.attr(\"options-value\");\n            }\n            var textName = null;\n            if ($element[0].hasAttribute(\"options-text\")) {\n                textName = $element.attr(\"options-text\");\n            }\n            //$scope.$watch(\"select\", function () {\n            //updateOptions();\n            //});\n            $scope.getOptionValue = function (option) {\n                if (valueName == null)\n                    return option;\n                else\n                    return option[valueName];\n            };\n            $scope.getOptionText = function (option) {\n                if (textName == null)\n                    return option;\n                else\n                    return option[textName];\n            };\n        }\n    };\n});","angular.module(\"library\").directive(\"textField\", function () {\n    return {\n        restrict: \"A\",\n        scope: true,\n        templateUrl: \"app/directives/field/textField.html\",\n        controller: function ($scope, $element) {\n            $scope.field = $element.attr(\"field-name\");\n            $scope.class = \"\";\n            if ($element[0].hasAttribute(\"add-class\")) {\n                $scope.class = $element.attr(\"add-class\");\n            }\n        }\n    };\n});"],"sourceRoot":"/source/"}