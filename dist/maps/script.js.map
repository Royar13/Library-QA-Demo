{"version":3,"sources":["app.js","addBook/addBook.js","displayBooks/displayBooks.js","displayReaders/displayReaders.js","filters/dateToISO.js","filters/unique.js","login/login.js","main/main.js","panel/panel.js","services/user.js","updateBook/updateBook.js","updateBook/updateBookMenu.js","updateReader/updateReader.js","updateReader/updateReaderMenu.js","addReader/addReader.js","borrowBooks/borrowBooks.js","borrowBooks/borrowBooksMenu.js","topBar/topBar.js","directives/error/error.js","directives/field/errors.js","directives/field/generalErrors.js","directives/field/selectField.js","directives/field/textField.js","directives/btnsMenu/btnsMenu.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.js","sourcesContent":["var app = angular.module(\"library\", [\"ngRoute\", \"ngAlertify\", \"smart-table\", \"angucomplete-alt\"]);\r\napp.config(function ($routeProvider) {\r\n    $routeProvider\r\n            .when(\"/\", {\r\n                templateUrl: \"app/login/login.html\",\r\n                controller: \"loginCtrl\"\r\n            })\r\n            .when(\"/main\", {\r\n                templateUrl: \"app/main/main.html\",\r\n                controller: \"mainCtrl\"\r\n            })\r\n            .when(\"/displayReaders\", {\r\n                templateUrl: \"app/displayReaders/displayReaders.html\",\r\n                controller: \"displayReadersCtrl\"\r\n            })\r\n            .when(\"/addReader\", {\r\n                templateUrl: \"app/addReader/addReader.html\",\r\n                controller: \"addReaderCtrl\"\r\n            })\r\n            .when(\"/displayBooks\", {\r\n                templateUrl: \"app/displayBooks/displayBooks.html\",\r\n                controller: \"displayBooksCtrl\"\r\n            })\r\n            .when(\"/addBook\", {\r\n                templateUrl: \"app/addBook/addBook.html\",\r\n                controller: \"addBookCtrl\"\r\n            })\r\n            .when(\"/updateBook\", {\r\n                templateUrl: \"app/updateBook/updateBook.html\",\r\n                controller: \"updateBookCtrl\"\r\n            })\r\n            .when(\"/updateBookMenu\", {\r\n                templateUrl: \"app/updateBook/updateBookMenu.html\",\r\n                controller: \"updateBookMenuCtrl\"\r\n            })\r\n\r\n            .when(\"/updateReader\", {\r\n                templateUrl: \"app/updateReader/updateReader.html\",\r\n                controller: \"updateReaderCtrl\"\r\n            })\r\n            .when(\"/updateReaderMenu\", {\r\n                templateUrl: \"app/updateReader/updateReaderMenu.html\",\r\n                controller: \"updateReaderMenuCtrl\"\r\n            })\r\n            .when(\"/borrowBooksMenu\", {\r\n                templateUrl: \"app/borrowBooks/borrowBooksMenu.html\",\r\n                controller: \"borrowBooksMenuCtrl\"\r\n            })\r\n            .when(\"/borrowBooks\", {\r\n                templateUrl: \"app/borrowBooks/borrowBooks.html\",\r\n                controller: \"borrowBooksCtrl\"\r\n            });\r\n}).run(function ($rootScope, $location) {\r\n    $rootScope.$on(\"$routeChangeSuccess\", function (event, data) {\r\n        if (data.$$route && data.$$route.controller)\r\n            $rootScope.controllerName = data.$$route.controller;\r\n    });\r\n});","angular.module(\"library\").controller(\"addBookCtrl\", function ($scope, $http, alertify) {\r\n\r\n    $scope.fields = {\r\n        name: \"\",\r\n        sectionId: \"\",\r\n        bookcaseId: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        releaseYear: \"\",\r\n        copies: \"\"\r\n    };\r\n    $scope.errors = {};\r\n    $scope.select = {};\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readAuthors.php\"\r\n    }).then(function (response) {\r\n        $scope.select.authors = response.data.authors;\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readPublishers.php\"\r\n    }).then(function (response) {\r\n        $scope.select.publishers = response.data.publishers;\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readSections.php\"\r\n    }).then(function (response) {\r\n        $scope.select.sections = response.data.sections;\r\n\r\n    });\r\n    $scope.$watch(\"fields.sectionId\", function () {\r\n        $scope.updateBookcases();\r\n    });\r\n    $scope.updateBookcases = function () {\r\n        try {\r\n            $scope.select.bookcases = new Array();\r\n            for (var i = 0; i < getSectionById($scope.fields.sectionId).bookcaseAmount; i++) {\r\n                $scope.select.bookcases[i] = i + 1;\r\n            }\r\n        } catch (ex) {\r\n\r\n        }\r\n    };\r\n    $scope.addBook = function () {\r\n        $scope.fields.author = $(\"#author_value\").val();\r\n        $scope.fields.publisher = $(\"#publisher_value\").val();\r\n\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/addBook.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (!response.data.success) {\r\n                $scope.errors = response.data.errors;\r\n                alertify.error(\"הקלט שהוזן אינו תקין\");\r\n            } else {\r\n                alertify.success(\"הספר נוסף בהצלחה!\");\r\n            }\r\n        });\r\n    };\r\n    function getSectionById(id) {\r\n        for (var i in $scope.select.sections) {\r\n            var section = $scope.select.sections[i];\r\n            if (section.id == id)\r\n                return section;\r\n        }\r\n    }\r\n});\r\n","angular.module(\"library\").controller(\"displayBooksCtrl\", function ($scope, $http) {\n    $scope.books = [];\n    $scope.quantity = 50;\n    $http({\n        method: \"post\",\n        url: \"./server/readBooks.php\"\n    }).then(function (response) {\n        $scope.books = response.data.books;\n    });\n});","angular.module(\"library\").controller(\"displayReadersCtrl\", function ($scope, $http) {\r\n    $scope.readers = [];\r\n    $scope.quantity = 50;\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readReaders.php\"\r\n    }).then(function (response) {\r\n        $scope.readers = response.data.readers;\r\n    });\r\n});","angular.module(\"library\").filter('dateToISO', function () {\r\n    return function (input) {\r\n        return new Date(input).toISOString();\r\n    };\r\n});","app.filter('unique', function () {\r\n    return function (arr, field) {\r\n        var o = {}, i, l = arr.length, r = [];\r\n        for (i = 0; i < l; i += 1) {\r\n            o[arr[i][field]] = arr[i];\r\n        }\r\n        for (i in o) {\r\n            r.push(o[i]);\r\n        }\r\n        return r;\r\n    };\r\n});","angular.module(\"library\").controller(\"loginCtrl\", function ($scope, $http, userService, $location) {\r\n    var request = userService.getUser();\r\n    if (request === true) {\r\n        $location.path(\"/main\");\r\n    } else {\r\n        request.then(function () {\r\n            if (userService.user != null)\r\n                $location.path(\"/main\");\r\n        });\r\n    }\r\n    $scope.fields = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n    $scope.errors = {};\r\n    $scope.login = function () {\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/login.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (response.data.success) {\r\n                userService.updateUser(response.data.username, response.data.name);\r\n                $location.path(\"/main\");\r\n            } else {\r\n                $scope.errors = response.data.errors;\r\n            }\r\n        });\r\n    };\r\n});","angular.module(\"library\").controller(\"mainCtrl\", function ($scope) {\r\n});","angular.module(\"library\").controller(\"panelCtrl\", function ($scope, $window, $location, alertify) {\r\n    alertify.logPosition(\"top right\");\r\n\r\n    var bgRatio = 1.67;\r\n    var bgWidth = $(window).height() * bgRatio;\r\n    var leftMargin = ($(window).width() - bgWidth) / 2;\r\n    $scope.panelStyle = {};\r\n    $scope.panelStyle.right = Math.max(leftMargin + 20, 20);\r\n    //$scope.panelStyle.width = bgWidth * 0.7;\r\n    //$scope.panelStyle.height = $(window).height() * 0.8;\r\n\r\n    $scope.includeTopBar = function () {\r\n        return $location.path() != \"/\";\r\n    }\r\n    $scope.loading = false;\r\n});","angular.module(\"library\").service(\"userService\", function ($http, $location) {\r\n    this.updateUser = function (username, name) {\r\n        this.user = {username: username, name: name};\r\n    };\r\n    this.getUser = function () {\r\n        if (this.user != null) {\r\n            return true;\r\n        }\r\n        var _this = this;\r\n        return $http({\r\n            method: \"post\",\r\n            url: \"./server/login.php\"\r\n        }).then(function (response) {\r\n            if (response.data.success) {\r\n                _this.updateUser(response.data.username, response.data.name);\r\n            }\r\n        });\r\n    };\r\n});","angular.module(\"library\").controller(\"updateBookCtrl\", function ($scope, $http, $routeParams, $location, $route, alertify) {\r\n    var boolSectionsFinish = false;\r\n    $scope.editMode = false;\r\n    var bookId = $routeParams.id;\r\n    $scope.fields = {\r\n        id: \"\",\r\n        name: \"\",\r\n        sectionId: \"\",\r\n        bookcaseId: \"\",\r\n        author: \"\",\r\n        publisher: \"\",\r\n        releaseYear: \"\",\r\n        copies: \"\"\r\n    };\r\n    $scope.errors = {};\r\n    $scope.select = {};\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readBook.php\",\r\n        data: {id: bookId}\r\n    }).then(function (response) {\r\n        $scope.fields = response.data;\r\n        $scope.fields.id = bookId;\r\n        $scope.fields.releaseYear = Number($scope.fields.releaseYear);\r\n        $scope.fields.copies = Number($scope.fields.copies);\r\n        if (boolSectionsFinish)\r\n            $scope.updateBookcases();\r\n        boolSectionsFinish = true;\r\n\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readAuthors.php\"\r\n    }).then(function (response) {\r\n        $scope.select.authors = response.data.authors;\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readPublishers.php\"\r\n    }).then(function (response) {\r\n        $scope.select.publishers = response.data.publishers;\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readSections.php\"\r\n    }).then(function (response) {\r\n        $scope.select.sections = response.data.sections;\r\n        if (boolSectionsFinish)\r\n            $scope.updateBookcases();\r\n        boolSectionsFinish = true;\r\n    });\r\n    $scope.$watch(\"fields.sectionId\", function () {\r\n        $scope.updateBookcases();\r\n    });\r\n    $scope.updateBookcases = function () {\r\n        try {\r\n            $scope.select.bookcases = new Array();\r\n            for (var i = 0; i < $scope.getSectionById($scope.fields.sectionId).bookcaseAmount; i++) {\r\n                $scope.select.bookcases[i] = i + 1;\r\n            }\r\n        } catch (ex) {\r\n\r\n        }\r\n    };\r\n    $scope.getSectionById = function (id) {\r\n        for (var i in $scope.select.sections) {\r\n            var section = $scope.select.sections[i];\r\n            if (section.id == id)\r\n                return section;\r\n        }\r\n    };\r\n    $scope.updateBook = function () {\r\n        $scope.fields.author = $(\"#author_value\").val();\r\n        $scope.fields.publisher = $(\"#publisher_value\").val();\r\n\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/updateBook.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (!response.data.success) {\r\n                $scope.errors = response.data.errors;\r\n                alertify.error(\"הקלט שהוזן אינו תקין\");\r\n            } else {\r\n                alertify.success(\"הספר עודכן בהצלחה!\");\r\n                $scope.editMode = false;\r\n                $scope.errors = {};\r\n            }\r\n        });\r\n    };\r\n    $scope.toggleModes = function () {\r\n        if ($scope.editMode)\r\n            $route.reload();\r\n        else\r\n            $scope.editMode = !$scope.editMode;\r\n    };\r\n});\r\n","angular.module(\"library\").controller(\"updateBookMenuCtrl\", function ($scope, $http, $location) {\r\n    $scope.fields = {};\r\n\r\n    $scope.searchBook = function () {\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/bookExists.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (!response.data.success) {\r\n                $scope.errors = response.data.errors;\r\n            } else {\r\n                $location.path(\"/updateBook\").search({id: $scope.fields.id});\r\n            }\r\n        });\r\n    };\r\n});\r\n","angular.module(\"library\").controller(\"updateReaderCtrl\", function ($scope, $http, $routeParams, $location, $route, alertify) {\r\n    var boolData = false;\r\n    $scope.editMode = false;\r\n    var readerId = $routeParams.id;\r\n    $scope.fields = {\r\n        id: \"\",\r\n        name: \"\",\r\n        city: \"\",\r\n        street: \"\",\r\n        maxBooks: 0,\r\n        readerType: \"\"\r\n    };\r\n    $scope.errors = {};\r\n    $scope.select = {};\r\n    $scope.monthlyPay = 0;\r\n    $scope.$watchGroup([\"fields.readerType\", \"fields.maxBooks\"], function (newValues, oldValues, scope) {\r\n        updatePay();\r\n    });\r\n    function updatePay() {\r\n        try {\r\n            $scope.monthlyPay = $scope.getReaderType($scope.fields.readerType).bookCost * $scope.fields.maxBooks;\r\n        }\r\n        catch (ex) {\r\n\r\n        }\r\n    }\r\n\r\n    $scope.getReaderType = function (id) {\r\n        for (var i in $scope.select.readerTypes) {\r\n            if ($scope.select.readerTypes[i].id == id)\r\n                return $scope.select.readerTypes[i];\r\n        }\r\n    }\r\n    $scope.address = function () {\r\n        if ($scope.fields.city != \"\") {\r\n            return $scope.fields.street + \", \" + $scope.fields.city;\r\n        }\r\n        return \"\";\r\n    };\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readReader.php\",\r\n        data: {id: readerId}\r\n    }).then(function (response) {\r\n        $scope.fields = response.data;\r\n        $scope.fields.id = readerId;\r\n        updatePay();\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readReaderTypes.php\"\r\n    }).then(function (response) {\r\n        $scope.select.readerTypes = response.data.readerTypes;\r\n        updatePay();\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readBooksNum.php\"\r\n    }).then(function (response) {\r\n        $scope.select.maxBooks = response.data.booksNum;\r\n    });\r\n    $scope.updateReader = function () {\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/updateReader.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (!response.data.success) {\r\n                $scope.errors = response.data.errors;\r\n                alertify.error(\"הקלט שהוזן אינו תקין\");\r\n            } else {\r\n                alertify.success(\"הקורא עודכן בהצלחה!\");\r\n                $scope.editMode = false;\r\n                $scope.errors = {};\r\n            }\r\n        });\r\n    };\r\n    $scope.toggleModes = function () {\r\n        if ($scope.editMode)\r\n            $route.reload();\r\n        else\r\n            $scope.editMode = !$scope.editMode;\r\n    };\r\n});\r\n","angular.module(\"library\").controller(\"updateReaderMenuCtrl\", function ($scope, $http, $location) {\r\n    $scope.fields = {};\r\n\r\n    $scope.searchReader = function () {\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/readerExists.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (!response.data.success) {\r\n                $scope.errors = response.data.errors;\r\n            } else {\r\n                $location.path(\"/updateReader\").search({id: $scope.fields.id});\r\n            }\r\n        });\r\n    };\r\n});\r\n","angular.module(\"library\").controller(\"addReaderCtrl\", function ($scope, $http, alertify) {\r\n    $scope.fields = {\r\n        id: \"\",\r\n        name: \"\",\r\n        city: \"\",\r\n        street: \"\",\r\n        maxBooks: 0,\r\n        readerType: \"\"\r\n    };\r\n    $scope.errors = {};\r\n    $scope.select = {};\r\n    $scope.monthlyPay = 0;\r\n    $scope.$watchGroup([\"fields.readerType\", \"fields.maxBooks\"], function (newValues, oldValues, scope) {\r\n        try {\r\n            scope.monthlyPay = getReaderType(newValues[0]).bookCost * newValues[1];\r\n        }\r\n        catch (ex) {\r\n\r\n        }\r\n    });\r\n\r\n    function getReaderType(id) {\r\n        for (var i in $scope.select.readerTypes) {\r\n            if ($scope.select.readerTypes[i].id == id)\r\n                return $scope.select.readerTypes[i];\r\n        }\r\n    }\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readReaderTypes.php\"\r\n    }).then(function (response) {\r\n        $scope.select.readerTypes = response.data.readerTypes;\r\n    });\r\n    $http({\r\n        method: \"post\",\r\n        url: \"./server/readBooksNum.php\"\r\n    }).then(function (response) {\r\n        $scope.select.maxBooks = response.data.booksNum;\r\n    });\r\n    $scope.addReader = function () {\r\n        $scope.loading = true;\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/addReader.php\",\r\n            data: $scope.fields\r\n        }).then(function (response) {\r\n            $scope.loading = false;\r\n            if (!response.data.success) {\r\n                $scope.errors = response.data.errors;\r\n                alertify.error(\"הקלט שהוזן אינו תקין\");\r\n            }\r\n            else {\r\n                alertify.success(\"הקורא נוסף בהצלחה!\");\r\n            }\r\n        });\r\n    };\r\n});\r\n","angular.module(\"library\").controller(\"borrowBooksCtrl\", function ($scope, $http, $routeParams, alertify) {\n    $scope.readerId = $routeParams.id;\n    $scope.isReturn = [];\n    $scope.borrows = [{}];\n    $scope.m={};\n    $scope.$watch(\"m\", function() {\n    });\n    $scope.fields = {\n        readerId: \"\",\n        borrowBooksId: [],\n        returnBooksId: []\n    };\n    $scope.errors = {};\n    $scope.select = {};\n    $http({\n        method: \"post\",\n        url: \"./server/readReader.php\",\n        data: {id: $scope.readerId}\n    }).then(function (response) {\n        $scope.readerName = response.data.name;\n    });\n    $http({\n        method: \"post\",\n        url: \"./server/readBorrowedBooks.php\",\n        data: {id: $scope.readerId}\n    }).then(function (response) {\n        $scope.readerName = response.data.name;\n    });\n    $http({\n        method: \"post\",\n        url: \"./server/readBooks.php\"\n    }).then(function (response) {\n        $scope.books = response.data.books;\n    });\n    $scope.borrowReturn = function () {\n        $scope.fields.readerId = $scope.readerId;\n        $scope.fields.borrowBooksId = [];\n        $scope.fields.returnBooksId = [];\n\n        for (var i in $scope.isReturn) {\n            if ($scope.isReturn[i]) {\n                $scope.fields.returnBooksId.push(i);\n            }\n        }\n        $(\"#borrow .book\").each(function () {\n\n        });\n    };\n});\n","angular.module(\"library\").controller(\"borrowBooksMenuCtrl\", function ($scope, $http, $location) {\n    $scope.fields = {};\n\n    $scope.searchReader = function () {\n        $scope.loading = true;\n        $http({\n            method: \"post\",\n            url: \"./server/readerExists.php\",\n            data: $scope.fields\n        }).then(function (response) {\n            $scope.loading = false;\n            if (!response.data.success) {\n                $scope.errors = response.data.errors;\n            } else {\n                $location.path(\"/borrowBooks\").search({id: $scope.fields.id});\n            }\n        });\n    };\n});\n","angular.module(\"library\").controller(\"topBarCtrl\", function ($scope, $http, $location, userService) {\r\n    $scope.user = {};\r\n    function retrieveUser() {\r\n        Object.keys(userService.user).forEach(function (key) {\r\n            $scope.user[key] = userService.user[key];\r\n        });\r\n    }\r\n    ;\r\n    var request = userService.getUser();\r\n    if (request === true) {\r\n        retrieveUser();\r\n    } else {\r\n        request.then(function () {\r\n            if (userService.user != null)\r\n                retrieveUser();\r\n            else\r\n                $location.path(\"/\");\r\n        });\r\n    }\r\n    $scope.disconnect = function () {\r\n        $http({\r\n            method: \"post\",\r\n            url: \"./server/disconnect.php\"\r\n        }).then(function () {\r\n            userService.user = null;\r\n            $location.path(\"/\");\r\n        });\r\n    };\r\n});","angular.module(\"library\").directive(\"error\", function () {\r\n    return {\r\n    };\r\n});","angular.module(\"library\").directive(\"errors\", function () {\r\n    return {\r\n        restrict: \"A\",\r\n        scope: true,\r\n        templateUrl: \"app/directives/field/errors.html\"\r\n    };\r\n});","angular.module(\"library\").directive(\"generalErrors\", function () {\r\n    return {\r\n        restrict: \"A\",\r\n        scope: true,\r\n        templateUrl: \"app/directives/field/generalErrors.html\"\r\n    };\r\n});","angular.module(\"library\").directive(\"selectField\", function () {\r\n    return {\r\n        restrict: \"A\",\r\n        scope: true,\r\n        require: \"field\",\r\n        templateUrl: \"app/directives/field/selectField.html\",\r\n        controller: function ($scope, $element) {\r\n            $scope.field = $element.attr(\"field-name\");\r\n\r\n            $scope.class = \"\";\r\n            if ($element[0].hasAttribute(\"add-class\")) {\r\n                $scope.class = $element.attr(\"add-class\");\r\n            }\r\n            $scope.selectName = $element.attr(\"options\");\r\n            var valueName = null;\r\n            if ($element[0].hasAttribute(\"options-value\")) {\r\n                valueName = $element.attr(\"options-value\");\r\n            }\r\n            var textName = null;\r\n            if ($element[0].hasAttribute(\"options-text\")) {\r\n                textName = $element.attr(\"options-text\");\r\n            }\r\n\r\n            $scope.getOptionValue = function (option) {\r\n                if (valueName == null)\r\n                    return option;\r\n                else\r\n                    return option[valueName];\r\n            };\r\n            $scope.getOptionText = function (option) {\r\n                if (textName == null)\r\n                    return option;\r\n                else\r\n                    return option[textName];\r\n            };\r\n        }\r\n    };\r\n});","angular.module(\"library\").directive(\"textField\", function () {\r\n    return {\r\n        restrict: \"A\",\r\n        scope: true,\r\n        templateUrl: \"app/directives/field/textField.html\",\r\n        controller: function ($scope, $element) {\r\n            $scope.field = $element.attr(\"field-name\");\r\n            $scope.class = \"\";\r\n            if ($element[0].hasAttribute(\"add-class\")) {\r\n                $scope.class = $element.attr(\"add-class\");\r\n            }\r\n            $scope.fieldType = \"text\";\r\n            if ($element[0].hasAttribute(\"field-type\")) {\r\n                $scope.fieldType = $element.attr(\"field-type\");\r\n            }\r\n        }\r\n    };\r\n});","angular.module(\"library\").directive(\"btnsMenu\", function () {\r\n    return {\r\n        restrict: \"A\",\r\n        scope: {},\r\n        templateUrl: \"app/directives/btnsMenu/btnsMenu.html\",\r\n        controller: function ($scope, $location, $window) {\r\n            $scope.back = function () {\r\n                $window.history.back();\r\n            };\r\n            $scope.home = function () {\r\n                $location.path(\"/main\");\r\n            };\r\n        }\r\n    };\r\n});"],"sourceRoot":"/source/"}